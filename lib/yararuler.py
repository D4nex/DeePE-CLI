from lib.analysis import Analyzer
from colorama import Fore, Style

class YaraRuler:
  def __init__(self, master, author: str, condition: str):
    self.name = f'{master.analysis.metadata['Name'].rsplit(".exe", 1)[0]}_Rule'
    self.author = author
    self.desc = f"Yara rule generated by DeePE for {master.analysis.metadata['Name'].rsplit(".exe", 1)[0]} sample"
    self.date = master.date
    self.hashes = []
    self.opcodes = []
    self.imphash = [f'        $imp = "{master.analysis.imphash}"']
    self.condition = condition
    
    for key, value in master.analysis.hashes.items():
      self.hashes.append(value)
    for key, opcode in master.analysis.opcodes.items():
        for key, op in opcode.items():
          self.opcodes.append(op)
          
  def writeRule(self):
    try:
      meta_section = f"""
      meta:
        author = "{self.author}"
        date = "{self.date}
        description = "{self.desc}"
  """
      for i, hash_value in enumerate(self.hashes, start=1):
        meta_section += f'        hash{i} = "{hash_value}"\n'
        
      opcode_strings = []
      for i, opcode in enumerate(self.opcodes, start=1):
        opcode_strings.append(f'        $op{i} = {{{opcode}}}')
      strings_section = "strings:\n" + "\n".join(self.imphash + opcode_strings)
      
      yara_rule = f"""
      rule {self.name } {{
      {meta_section}
      {strings_section}
      condition:
          {self.condition}
      }}"""
      
      with open(f"yara-rules/{self.name}.yar", "w") as f:
        f.write(yara_rule.strip())
      print(f"{Fore.MAGENTA}[{Fore.CYAN}+{Fore.MAGENTA}]{Style.RESET_ALL} YARA rule written to {self.name}.yar")
    except Exception as e:
      print(f"{Fore.RED + Style.DIM}[!]{Style.RESET_ALL} An error has ocurred: {e}")